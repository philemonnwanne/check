import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table"
import { Badge } from "@/components/ui/badge"
import { Check, Clock, AlertCircle, Link as LinkIcon } from "lucide-react"
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select"
import { Task } from "./types"

interface TaskTableProps {
  tasks: Task[]
  onStatusChange: (taskId: number, status: "pending" | "completed" | "upcoming") => void
}

export function TaskTable({ tasks, onStatusChange }: TaskTableProps) {
  return (
    <Table>
      <TableHeader>
        <TableRow>
          <TableHead className="w-12">Status</TableHead>
          <TableHead>Title</TableHead>
          <TableHead>Priority</TableHead>
          <TableHead>Due Date</TableHead>
          <TableHead>Linked Case</TableHead>
          <TableHead>Type</TableHead>
          <TableHead className="w-[150px]">Action</TableHead>
        </TableRow>
      </TableHeader>
      <TableBody>
        {tasks.map((task) => (
          <TableRow key={task.id}>
            <TableCell>
              <div className="flex items-center">
                {task.status === "completed" ? (
                  <Check className="h-4 w-4 text-green-500" />
                ) : task.status === "pending" ? (
                  <AlertCircle className="h-4 w-4 text-yellow-500" />
                ) : (
                  <Clock className="h-4 w-4 text-blue-500" />
                )}
              </div>
            </TableCell>
            <TableCell>
              <div>
                <p className="font-medium">{task.title}</p>
                <p className="text-sm text-muted-foreground">{task.description}</p>
              </div>
            </TableCell>
            <TableCell>
              <Badge
                variant={
                  task.priority === "high"
                    ? "destructive"
                    : task.priority === "medium"
                    ? "default"
                    : "secondary"
                }
              >
                {task.priority}
              </Badge>
            </TableCell>
            <TableCell>{new Date(task.dueDate).toLocaleDateString()}</TableCell>
            <TableCell>
              <div className="flex items-center">
                <LinkIcon className="mr-2 h-4 w-4" />
                {task.linkedCase.title}
              </div>
            </TableCell>
            <TableCell>
              <Badge variant="outline">
                {task.isAutoGenerated ? "Auto-generated" : "Manual"}
              </Badge>
            </TableCell>
            <TableCell>
              <Select
                value={task.status}
                onValueChange={(value) => onStatusChange(task.id, value as "pending" | "completed" | "upcoming")}
              >
                <SelectTrigger className="w-[130px]">
                  <SelectValue placeholder="Update status" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="pending">Pending</SelectItem>
                  <SelectItem value="completed">Completed</SelectItem>
                  <SelectItem value="upcoming">Upcoming</SelectItem>
                </SelectContent>
              </Select>
            </TableCell>
          </TableRow>
        ))}
      </TableBody>
    </Table>
  )
}